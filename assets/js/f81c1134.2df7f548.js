"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/remote/CHANGELOG","metadata":{"permalink":"/blog/remote/CHANGELOG","editUrl":"https://github.com/foyer-rs/website/tree/main/blog/remote/CHANGELOG.md","source":"@site/blog/remote/CHANGELOG.md","title":"Changelog","description":"Changelog for foyer.","date":"2023-05-12T03:02:09.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"Changelog for foyer"}],"readingTime":11.64,"hasTruncateMarker":true,"authors":[{"name":"Croxx","title":"Author of foyer","url":"https://github.com/mrcroxx","page":{"permalink":"/blog/authors/mrcroxx"},"socials":{"x":"https://x.com/CroxxMr","github":"https://github.com/mrcroxx","linkedin":"https://www.linkedin.com/in/mrcroxx/","newsletter":"https://blog.mrcroxx.com"},"imageURL":"https://github.com/mrcroxx.png","key":"mrcroxx"}],"frontMatter":{"title":"Changelog","description":"Changelog for foyer.","authors":"mrcroxx","tags":["changelog"],"date":"2023-05-12T03:02:09.000Z"},"unlisted":false,"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"\x3c!-- truncate --\x3e\\n\\n## 2024-09-12\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.11.2 |\\n| foyer-common | 0.9.2 |\\n| foyer-intrusive | 0.9.2 |\\n| foyer-memory | 0.7.2 |\\n| foyer-storage | 0.10.2 |\\n| foyer-bench | 0.3.2 |\\n\\n### Changes\\n\\n- Support windows (for `foyer` only).\\n- Bump rust toolchain to `1.81.0`.\\n- Expose in-memory cache builder and cache entry.\\n- Reduce page fault and vec growth overhead.\\n- Use bytes size for `foyer-bench`.\\n- Fix install deps script.\\n\\n## 2024-08-31\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.11.1 |\\n| foyer-common | 0.9.1 |\\n| foyer-intrusive | 0.9.1 |\\n| foyer-memory | 0.7.1 |\\n| foyer-storage | 0.10.1 |\\n| foyer-bench | 0.3.1 |\\n\\n### Changes\\n\\n- Add metrics for serde.\\n- Refine `fetch` runtime usage.\\n- Fix unhandled low-layer errors. #674 #677 #679\\n- Implement `Default` for `TokioRuntimeConfig`.\\n- Fix typos and format code with unstable features.\\n\\n## 2024-08-21\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.11.0 |\\n| foyer-common | 0.9.0 |\\n| foyer-intrusive | 0.9.0 |\\n| foyer-memory | 0.7.0 |\\n| foyer-storage | 0.10.0 |\\n| foyer-bench | 0.3.0 |\\n\\n### Changes\\n\\n- Support disk cache on raw block device.\\n- Support fine-grained storage engine runtime configuration.\\n- Enhance performance via reducing page fault.\\n- Refine storage engine framework for future features.\\n- Expose `Weighter` trait.\\n- Support `serde` for more configurations.\\n- Update `foyer-bench` with more fine-grained configurations.\\n- Fix panics with `None` recover mode.\\n\\n## 2024-08-15\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.10.4 |\\n| foyer-storage | 0.9.3 |\\n| foyer-bench | 0.2.3 |\\n\\n### Changes\\n\\n- Support serde for recover mode configuration.\\n\\n## 2024-08-14\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.10.2 |\\n| foyer-storage | 0.9.2 |\\n| foyer-bench | 0.2.2 |\\n\\n### Changes\\n\\n- Fix panic with \\"none\\" recovery mode.\\n\\n## 2024-07-08\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.10.1 |\\n| foyer-common | 0.8.1 |\\n| foyer-intrusive | 0.8.1 |\\n| foyer-memory | 0.6.1 |\\n| foyer-storage | 0.9.1 |\\n| foyer-bench | 0.2.1 |\\n\\n### Changes\\n\\n- Refine write model, make flush buffer threshold configurable to mitigate memory usage spike and OOM.\\n\\n## 2024-07-02\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.10.0 |\\n| foyer-common | 0.8.0 |\\n| foyer-intrusive | 0.8.0 |\\n| foyer-memory | 0.6.0 |\\n| foyer-storage | 0.9.0 |\\n| foyer-bench | 0.2.0 |\\n\\n### Changes\\n\\n- Introduce tail-based tracing framework with [minitrace](https://github.com/tikv/minitrace-rust). [Tail-based Tracing Example](https://github.com/foyer-rs/foyer/tree/main/examples/tail_based_tracing.rs).\\n- Fix `fetch()` disk cache refill on in-memory cache miss.\\n- Publish *foyer* logo! \\n\\n<img src=\\"https://raw.githubusercontent.com/foyer-rs/foyer/main/etc/logo/slogan.min.svg\\" style=\\"width: 200px\\"/>\\n\\n## 2024-06-14\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.9.4 |\\n| foyer-storage | 0.8.5 |\\n| foyer-bench | 0.1.4 |\\n\\n### Changes\\n\\n- Fix phantom entries after foyer storage recovery. [#560](https://github.com/foyer-rs/foyer/pull/560)\\n- Fix hybrid cache hit metrics with `fetch()` interface. [#563](https://github.com/foyer-rs/foyer/pull/563)\\n\\n## 2024-06-05\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.9.3 |\\n| foyer-common | 0.7.3 |\\n| foyer-intrusive | 0.7.2 |\\n| foyer-memory | 0.5.2 |\\n| foyer-storage | 0.8.4 |\\n| foyer-bench | 0.1.3 |\\n\\n### Changes\\n\\n- Hybrid cache `fetch()` use the dedicated runtime by default if enabled.\\n- Separate `fetch()` and `fetch_with_runtime()` interface for in-memory cache.\\n\\n## 2024-06-04\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-storage | 0.8.3 |\\n\\n### Changes\\n\\n- Fix \\"invalid argument (code: 22)\\" on target aarch64.\\n\\n## 2024-06-03\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.9.2 |\\n| foyer-common | 0.7.2 |\\n| foyer-intrusive | 0.7.1 |\\n| foyer-memory | 0.5.1 |\\n| foyer-storage | 0.8.2 |\\n| foyer-bench | 0.1.2 |\\n\\n### Changes\\n\\n- Support customized cache event listener.\\n\\n## 2024-05-31\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.9.1 |\\n| foyer-common | 0.7.1 |\\n| foyer-intrusive | 0.7.0 |\\n| foyer-memory | 0.5.0 |\\n| foyer-storage | 0.8.1 |\\n| foyer-bench | 0.1.1 |\\n\\n### Changes\\n\\n- Fix \\"attempt to subtract with overflow\\" panic after cloning cache entry. [#543](https://github.com/foyer-rs/foyer/issues/543).\\n- Fix \\"assertion failed: base.is_in_indexer()\\" panic after replacing deposit entry. [#547](https://github.com/foyer-rs/foyer/issues/547).\\n- Fix setting name for in-memory cache.\\n- Add region related metrics.\\n- Introduce `strict_assertions` and `sanity` feature for debugging.\\n- `foyer-bench` support setting eviction algorithm.\\n- Upgrade `metrics` to `0.23`.\\n- Remove `pop()` related interface from the in-memory cache.\\n- Refine intrusive data structure implementation.\\n\\n## 2024-05-27\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.9.0 |\\n| foyer-common | 0.7.0 |\\n| foyer-intrusive | 0.6.0 |\\n| foyer-memory | 0.4.0 |\\n| foyer-storage | 0.8.0 |\\n| foyer-bench | 0.1.0 |\\n\\n### Changes\\n\\n- Refine the storage engine to reduce the overhead and boost the performance.\\n  - Hybrid cache memory overhead reduced by ~50%.\\n  - Hybrid cache operation latency reduced by ~80%.\\n- Replace `prometheus` with `metrics` to support more flexible metrics collection.\\n- Introduce `foyer-bench` to replace the original `foyer-storage-bench` for better benchmarking.\\n- Fulfill rust docs for public APIs.\\n- Introduce tombstone log for updatable persistent cache.\\n- Reduce unnecessary dependencies.\\n- More details: [foyer - Development Roadmap](https://github.com/orgs/foyer-rs/projects/2).\\n\\n## 2024-04-28\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.9 |\\n| foyer-common | 0.6.4 |\\n| foyer-memory | 0.3.6 |\\n| foyer-storage | 0.7.6 |\\n| foyer-storage-bench | 0.7.5 |\\n\\n### Changes\\n\\n- feat: Add config to control the recover mode.\\n- feat: Add config to enable/disable direct i/o. (Enabled by default for large entries optimization.)\\n\\n## 2024-04-28\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.8 |\\n| foyer-memory | 0.3.5 |\\n| foyer-storage | 0.7.5 |\\n| foyer-storage-bench | 0.7.4 |\\n\\n### Changes\\n\\n- feat: Impl `Debug` for `HybridCache`.\\n- feat: Impl `serde`, `Default` for eviction configs.\\n- refactor: Add internal trait `EvictionConfig` to bound eviction algorithm configs.\\n\\n## 2024-04-27\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.7 |\\n\\n### Changes\\n\\n- Make `HybridCache` clonable.\\n\\n## 2024-04-27\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-memory | 0.3.4 |\\n\\n### Changes\\n\\n- Fix S3FIFO ghost queue.\\n\\n## 2024-04-26\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-storage | 0.7.4 |\\n\\n### Changes\\n\\n- Fix `FsDeviceBuilder` on a non-exist directory without capacity given.\\n\\n## 2024-04-26\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.6 |\\n| foyer-common | 0.6.3 |\\n| foyer-intrusive | 0.5.3 |\\n| foyer-memory | 0.3.3 |\\n| foyer-storage | 0.7.3 |\\n| foyer-storage-bench | 0.7.3 |\\n\\n### Changes\\n\\n- Remove unused dependencies.\\n- Remove hakari workspace hack.\\n\\n## 2024-04-26\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.5 |\\n\\n### Changes\\n\\n- Expose `EntryState`, `HybridEntry`.\\n- Expose `StorageWriter`, `Metrics`, `get_metrics_registry`, `set_metrics_registry`.\\n- Expose `RangeBoundsExt`, `BufExt`, `BufMutExt`.\\n- Re-export `ahash::RandomState`.\\n- Loose `entry()` args trait bounds.\\n\\n## 2024-04-25\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.4 |\\n\\n### Changes\\n\\n- Expose `HybridCacheEntry`.\\n\\n## 2024-04-25\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.3 |\\n\\n### Changes\\n\\n- Expose `Key`, `Value`, `StorageKey`, `StorageValue` traits.\\n\\n## 2024-04-24\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.2 |\\n| foyer-common | 0.6.2 |\\n| foyer-intrusive | 0.5.2 |\\n| foyer-memory | 0.3.2 |\\n| foyer-storage | 0.7.2 |\\n| foyer-storage-bench | 0.7.2 |\\n| foyer-workspace-hack | 0.5.2 |\\n\\n### Changes\\n\\n- Add `nightly` feature to make it compatible with night toolchain.\\n\\n## 2024-04-24\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.1 |\\n| foyer-common | 0.6.1 |\\n| foyer-intrusive | 0.5.1 |\\n| foyer-memory | 0.3.1 |\\n| foyer-storage | 0.7.1 |\\n| foyer-storage-bench | 0.7.1 |\\n| foyer-workspace-hack | 0.5.1 |\\n\\n### Changes\\n\\n- Add `with_flush` to enable flush for each io.\\n- Loose MSRV to 1.76 .\\n- Flush the device on store close.\\n\\n## 2024-04-23\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.8.0 |\\n| foyer-common | 0.6.0 |\\n| foyer-intrusive | 0.5.0 |\\n| foyer-memory | 0.3.0 |\\n| foyer-storage | 0.7.0 |\\n| foyer-storage-bench | 0.7.0 |\\n| foyer-workspace-hack | 0.5.0 |\\n\\n### Changes\\n\\n- Combine in-memory cache and disk cache into `HybridCache`.\\n- Refine APIs, make them more user-friendly.\\n- Refine `Key`, `Value`, `StorageKey`, `StorageValue` traits.\\n- Support `serde` for storage key and value serialization and deserialization.\\n- Loose trait bounds for key and value.\\n- Add configurable ghost queue for S3FIFO.\\n- Fix S3FIFO eviction bugs.\\n- Add more examples.\\n\\n## 2024-04-11\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.7.0 |\\n| foyer-common | 0.5.0 |\\n| foyer-intrusive | 0.4.0 |\\n| foyer-memory | 0.2.0 |\\n| foyer-storage | 0.6.0 |\\n| foyer-storage-bench | 0.6.0 |\\n| foyer-workspace-hack | 0.4.0 |\\n\\n### Changes\\n\\n- Make `foyer` compatible with rust stable toolchain (MSRV = 1.77.2). \ud83c\udf89\\n\\n## 2024-04-09\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-storage | 0.5.1 |\\n| foyer-memory | 0.1.4 |\\n\\n### Changes\\n\\n- fix: Fix panics on `state()` for s3fifo entry.\\n- fix: Enable `offset_of` feature for `foyer-storage`.\\n\\n## 2024-04-08\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-intrusive | 0.3.1 |\\n| foyer-memory | 0.1.3 |\\n\\n### Changes\\n\\n- feat: Introduce s3fifo to `foyer-memory`.\\n- fix: Fix doctest for `foyer-intrusive`.\\n\\n## 2024-03-21\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-memory | 0.1.2 |\\n\\n### Changes\\n\\n- fix: `foyer-memory` export `DefaultCacheEventListener`.\\n\\n## 2024-03-14\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-memory | 0.1.1 |\\n\\n### Changes\\n\\n- Make eviction config clonable.\\n\\n## 2024-03-13\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-storage-bench | 0.5.1 |\\n\\n### Changes\\n\\n- Fix `foyer-storage-bench` build with `trace` feature.\\n\\n## 2024-03-12\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.6.0 |\\n| foyer-common | 0.4.0 |\\n| foyer-intrusive | 0.3.0 |\\n| foyer-memory | 0.1.0 |\\n| foyer-storage | 0.5.0 |\\n| foyer-storage-bench | 0.5.0 |\\n| foyer-workspace-hack | 0.3.0 |\\n\\n### Changes\\n\\n- Release foyer in-memory cache as crate `foyer-memory`.\\n- Bump other components with changes.\\n\\n## 2023-12-28\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.5.0 |\\n| foyer-common | 0.3.0 |\\n| foyer-intrusive | 0.2.0 |\\n| foyer-storage | 0.4.0 |\\n| foyer-storage-bench | 0.4.0 |\\n| foyer-workspace-hack | 0.2.0 |\\n\\n### Changes\\n\\n- Bump rust-toolchain to \\"nightly-2023-12-26\\".\\n- Introduce time-series distribution args to bench tool. [#253](https://github.com/foyer-rs/foyer/pull/253)\\n- Fix duplicated insert drop metrics.\\n\\n## 2023-12-22\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.4.0 |\\n| foyer-storage | 0.3.0 |\\n| foyer-storage-bench | 0.3.0 |\\n| foyer-workspace-hack | 0.1.1 |\\n\\n### Changes\\n\\n- Remove config `flusher_buffer_capacity`.\\n- Fix benchmark tool cache miss ratio.\\n\\n## 2023-12-20\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-storage | 0.2.2 |\\n\\n### Changes\\n\\n- Fix metrics for writer dropping.\\n- Add interface `insert_async_with_callback` and `insert_if_not_exists_async_with_callback` for callers to get the insert result.\\n\\n## 2023-12-18\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer-storage | 0.2.1 |\\n\\n### Changes\\n\\n- Introduce the entry size histogram, update metrics.\\n\\n## 2023-12-18\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.3.0 |\\n| foyer-common | 0.2.0 |\\n| foyer-storage | 0.2.0 |\\n| foyer-storage-bench | 0.2.0 |\\n\\n### Changes\\n\\n- Introduce the associated type `Cursor` for trait `Key` and `Value` to reduce unnecessary buffer copy if possible.\\n- Remove the ring buffer and continuum tracker for they are no longer needed.\\n- Update the configuration of the storage engine and the benchmark tool.\\n\\n## 2023-11-29\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.2.0 |\\n| foyer-common | 0.1.0 |\\n| foyer-intrusive | 0.1.0 |\\n| foyer-storage | 0.1.0 |\\n| foyer-storage-bench | 0.1.0 |\\n| foyer-workspace-hack | 0.1.0 |\\n\\n### Changes\\n\\nThe first version that can be used as file cache.\\n\\nThe write model and the design of storage engine has been switched from CacheLib navy version to the ring buffer version (which was highly inspired by MySQL 8.0 link_buf).\\n\\nIntroduces `Store`, `RuntimeStore`, `LazyStore` to simplify usage. In most cases, `RuntimeStore` is preferred to use a dedicated tokio runtime to serve **foyer** to avoid the influence to the user\'s runtime. If lazy-load is needed, use `RuntimeLazyStore` instead.\\n\\nThe implementation of **foyer** is separated into multiple crates. But importing `foyer` is enough for it re-exports the crates that **foyer**\'s user needs.\\n\\nBrief description about the subcrates:\\n\\n- foyer-common: Provide basic data structures and algorithms.\\n- foyer-intrusive: Provide intrusive containers for implementing eviction lists and collections. Intrusive data structures provide the ability to implement low-cost multi-index data structures, which will be used for the memory cache in future.\\n- foyer-storage: Provide the file cache storage engine and wrappers to simplify the code.\\n- foyer-storage-bench: Runnable benchmark tool for the file cache storage engine.\\n- foyer-workspace-hack: Generated by [hakari](https://crates.io/crates/hakari) to prevent building each crate from triggering building from scratch.\\n\\n## 2023-05-12\\n\\n### Releases\\n\\n| crate | version |\\n| - | - |\\n| foyer | 0.1.0 |\\n\\n### Changes\\n\\nInitial version with just basic interfaces."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/foyer-rs/website/tree/main/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"Facebook","permalink":"/blog/tags/facebook","description":"Facebook tag description"},{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.465,"hasTruncateMarker":true,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","page":{"permalink":"/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"Changelog","permalink":"/blog/remote/CHANGELOG"},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nHere are a few tips you might find useful.\\n\\n\x3c!-- truncate --\x3e\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/foyer-rs/website/tree/main/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.235,"hasTruncateMarker":true,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n:::\\n\\n{/* truncate */}\\n\\nFor example, use JSX to create an interactive button:\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>"},{"id":"long-blog-post","metadata":{"permalink":"/blog/long-blog-post","editUrl":"https://github.com/foyer-rs/website/tree/main/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":2.06,"hasTruncateMarker":true,"authors":[{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","page":{"permalink":"/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"yangshun","tags":["hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!-- truncate --\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/foyer-rs/website/tree/main/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet...","date":"2019-05-28T00:00:00.000Z","tags":[{"inline":false,"label":"Hola","permalink":"/blog/tags/hola","description":"Hola tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.135,"hasTruncateMarker":true,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","page":{"permalink":"/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":["slorber","yangshun"],"tags":["hola","docusaurus"]},"unlisted":false,"prevItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet...\\n\\n\x3c!-- truncate --\x3e\\n\\n...consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}}')}}]);